//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Métadonnées de relation EDM

[assembly: EdmRelationshipAttribute("fantocheModel", "inscrire_ibfk_2", "equipe", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AP3_GestionHackathon.equipe), "inscrire", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AP3_GestionHackathon.inscrire), true)]
[assembly: EdmRelationshipAttribute("fantocheModel", "membre_ibfk_2", "equipe", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AP3_GestionHackathon.equipe), "membre", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AP3_GestionHackathon.membre), true)]
[assembly: EdmRelationshipAttribute("fantocheModel", "token_ibfk_1", "equipe", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AP3_GestionHackathon.equipe), "token", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AP3_GestionHackathon.token), true)]
[assembly: EdmRelationshipAttribute("fantocheModel", "hackathon_ibfk_1", "organisateur", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AP3_GestionHackathon.organisateur), "hackathon", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AP3_GestionHackathon.hackathon), true)]
[assembly: EdmRelationshipAttribute("fantocheModel", "inscrire_ibfk_1", "hackathon", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AP3_GestionHackathon.hackathon), "inscrire", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AP3_GestionHackathon.inscrire), true)]

#endregion

namespace AP3_GestionHackathon
{
    #region Contextes
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    public partial class bd_fantocheEntities : ObjectContext
    {
        #region Constructeurs
    
        /// <summary>
        /// Initialise un nouvel objet bd_fantocheEntities à l'aide de la chaîne de connexion trouvée dans la section 'bd_fantocheEntities' du fichier de configuration d'application.
        /// </summary>
        public bd_fantocheEntities() : base("name=bd_fantocheEntities", "bd_fantocheEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet bd_fantocheEntities.
        /// </summary>
        public bd_fantocheEntities(string connectionString) : base(connectionString, "bd_fantocheEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet bd_fantocheEntities.
        /// </summary>
        public bd_fantocheEntities(EntityConnection connection) : base(connection, "bd_fantocheEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Méthodes partielles
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propriétés ObjectSet
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<administrateur> administrateur
        {
            get
            {
                if ((_administrateur == null))
                {
                    _administrateur = base.CreateObjectSet<administrateur>("administrateur");
                }
                return _administrateur;
            }
        }
        private ObjectSet<administrateur> _administrateur;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<equipe> equipe
        {
            get
            {
                if ((_equipe == null))
                {
                    _equipe = base.CreateObjectSet<equipe>("equipe");
                }
                return _equipe;
            }
        }
        private ObjectSet<equipe> _equipe;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<hackathon> hackathon
        {
            get
            {
                if ((_hackathon == null))
                {
                    _hackathon = base.CreateObjectSet<hackathon>("hackathon");
                }
                return _hackathon;
            }
        }
        private ObjectSet<hackathon> _hackathon;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<inscrire> inscrire
        {
            get
            {
                if ((_inscrire == null))
                {
                    _inscrire = base.CreateObjectSet<inscrire>("inscrire");
                }
                return _inscrire;
            }
        }
        private ObjectSet<inscrire> _inscrire;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<membre> membre
        {
            get
            {
                if ((_membre == null))
                {
                    _membre = base.CreateObjectSet<membre>("membre");
                }
                return _membre;
            }
        }
        private ObjectSet<membre> _membre;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<organisateur> organisateur
        {
            get
            {
                if ((_organisateur == null))
                {
                    _organisateur = base.CreateObjectSet<organisateur>("organisateur");
                }
                return _organisateur;
            }
        }
        private ObjectSet<organisateur> _organisateur;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<token> token
        {
            get
            {
                if ((_token == null))
                {
                    _token = base.CreateObjectSet<token>("token");
                }
                return _token;
            }
        }
        private ObjectSet<token> _token;

        #endregion

        #region Méthodes AddTo
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet administrateur. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToadministrateur(administrateur administrateur)
        {
            base.AddObject("administrateur", administrateur);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet equipe. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToequipe(equipe equipe)
        {
            base.AddObject("equipe", equipe);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet hackathon. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddTohackathon(hackathon hackathon)
        {
            base.AddObject("hackathon", hackathon);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet inscrire. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToinscrire(inscrire inscrire)
        {
            base.AddObject("inscrire", inscrire);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet membre. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddTomembre(membre membre)
        {
            base.AddObject("membre", membre);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet organisateur. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToorganisateur(organisateur organisateur)
        {
            base.AddObject("organisateur", organisateur);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet token. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddTotoken(token token)
        {
            base.AddObject("token", token);
        }

        #endregion

    }

    #endregion

    #region Entités
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fantocheModel", Name="administrateur")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class administrateur : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet administrateur.
        /// </summary>
        /// <param name="idadministrateur">Valeur initiale de la propriété idadministrateur.</param>
        /// <param name="nom">Valeur initiale de la propriété nom.</param>
        /// <param name="prenom">Valeur initiale de la propriété prenom.</param>
        public static administrateur Createadministrateur(global::System.Int32 idadministrateur, global::System.String nom, global::System.String prenom)
        {
            administrateur administrateur = new administrateur();
            administrateur.idadministrateur = idadministrateur;
            administrateur.nom = nom;
            administrateur.prenom = prenom;
            return administrateur;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idadministrateur
        {
            get
            {
                return _idadministrateur;
            }
            set
            {
                if (_idadministrateur != value)
                {
                    OnidadministrateurChanging(value);
                    ReportPropertyChanging("idadministrateur");
                    _idadministrateur = StructuralObject.SetValidValue(value, "idadministrateur");
                    ReportPropertyChanged("idadministrateur");
                    OnidadministrateurChanged();
                }
            }
        }
        private global::System.Int32 _idadministrateur;
        partial void OnidadministrateurChanging(global::System.Int32 value);
        partial void OnidadministrateurChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nom
        {
            get
            {
                return _nom;
            }
            set
            {
                OnnomChanging(value);
                ReportPropertyChanging("nom");
                _nom = StructuralObject.SetValidValue(value, false, "nom");
                ReportPropertyChanged("nom");
                OnnomChanged();
            }
        }
        private global::System.String _nom;
        partial void OnnomChanging(global::System.String value);
        partial void OnnomChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String prenom
        {
            get
            {
                return _prenom;
            }
            set
            {
                OnprenomChanging(value);
                ReportPropertyChanging("prenom");
                _prenom = StructuralObject.SetValidValue(value, false, "prenom");
                ReportPropertyChanged("prenom");
                OnprenomChanged();
            }
        }
        private global::System.String _prenom;
        partial void OnprenomChanging(global::System.String value);
        partial void OnprenomChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String motpasse
        {
            get
            {
                return _motpasse;
            }
            set
            {
                OnmotpasseChanging(value);
                ReportPropertyChanging("motpasse");
                _motpasse = StructuralObject.SetValidValue(value, true, "motpasse");
                ReportPropertyChanged("motpasse");
                OnmotpasseChanged();
            }
        }
        private global::System.String _motpasse;
        partial void OnmotpasseChanging(global::System.String value);
        partial void OnmotpasseChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true, "email");
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fantocheModel", Name="equipe")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class equipe : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet equipe.
        /// </summary>
        /// <param name="idequipe">Valeur initiale de la propriété idequipe.</param>
        /// <param name="nomequipe">Valeur initiale de la propriété nomequipe.</param>
        public static equipe Createequipe(global::System.Int32 idequipe, global::System.String nomequipe)
        {
            equipe equipe = new equipe();
            equipe.idequipe = idequipe;
            equipe.nomequipe = nomequipe;
            return equipe;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idequipe
        {
            get
            {
                return _idequipe;
            }
            set
            {
                if (_idequipe != value)
                {
                    OnidequipeChanging(value);
                    ReportPropertyChanging("idequipe");
                    _idequipe = StructuralObject.SetValidValue(value, "idequipe");
                    ReportPropertyChanged("idequipe");
                    OnidequipeChanged();
                }
            }
        }
        private global::System.Int32 _idequipe;
        partial void OnidequipeChanging(global::System.Int32 value);
        partial void OnidequipeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nomequipe
        {
            get
            {
                return _nomequipe;
            }
            set
            {
                OnnomequipeChanging(value);
                ReportPropertyChanging("nomequipe");
                _nomequipe = StructuralObject.SetValidValue(value, false, "nomequipe");
                ReportPropertyChanged("nomequipe");
                OnnomequipeChanged();
            }
        }
        private global::System.String _nomequipe;
        partial void OnnomequipeChanging(global::System.String value);
        partial void OnnomequipeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lienprototype
        {
            get
            {
                return _lienprototype;
            }
            set
            {
                OnlienprototypeChanging(value);
                ReportPropertyChanging("lienprototype");
                _lienprototype = StructuralObject.SetValidValue(value, true, "lienprototype");
                ReportPropertyChanged("lienprototype");
                OnlienprototypeChanged();
            }
        }
        private global::System.String _lienprototype;
        partial void OnlienprototypeChanging(global::System.String value);
        partial void OnlienprototypeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> nbparticipants
        {
            get
            {
                return _nbparticipants;
            }
            set
            {
                OnnbparticipantsChanging(value);
                ReportPropertyChanging("nbparticipants");
                _nbparticipants = StructuralObject.SetValidValue(value, "nbparticipants");
                ReportPropertyChanged("nbparticipants");
                OnnbparticipantsChanged();
            }
        }
        private Nullable<global::System.Int64> _nbparticipants;
        partial void OnnbparticipantsChanging(Nullable<global::System.Int64> value);
        partial void OnnbparticipantsChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String login
        {
            get
            {
                return _login;
            }
            set
            {
                OnloginChanging(value);
                ReportPropertyChanging("login");
                _login = StructuralObject.SetValidValue(value, true, "login");
                ReportPropertyChanged("login");
                OnloginChanged();
            }
        }
        private global::System.String _login;
        partial void OnloginChanging(global::System.String value);
        partial void OnloginChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fantocheModel", "inscrire_ibfk_2", "inscrire")]
        public EntityCollection<inscrire> inscrire
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<inscrire>("fantocheModel.inscrire_ibfk_2", "inscrire");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<inscrire>("fantocheModel.inscrire_ibfk_2", "inscrire", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fantocheModel", "membre_ibfk_2", "membre")]
        public EntityCollection<membre> membre
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<membre>("fantocheModel.membre_ibfk_2", "membre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<membre>("fantocheModel.membre_ibfk_2", "membre", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fantocheModel", "token_ibfk_1", "token")]
        public EntityCollection<token> token
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<token>("fantocheModel.token_ibfk_1", "token");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<token>("fantocheModel.token_ibfk_1", "token", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fantocheModel", Name="hackathon")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class hackathon : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet hackathon.
        /// </summary>
        /// <param name="idhackathon">Valeur initiale de la propriété idhackathon.</param>
        /// <param name="dateheuredebuth">Valeur initiale de la propriété dateheuredebuth.</param>
        /// <param name="dateheurefinh">Valeur initiale de la propriété dateheurefinh.</param>
        /// <param name="lieu">Valeur initiale de la propriété lieu.</param>
        /// <param name="ville">Valeur initiale de la propriété ville.</param>
        /// <param name="nb_equipe">Valeur initiale de la propriété nb_equipe.</param>
        /// <param name="date_fin_incrip">Valeur initiale de la propriété date_fin_incrip.</param>
        public static hackathon Createhackathon(global::System.Int32 idhackathon, global::System.DateTime dateheuredebuth, global::System.DateTime dateheurefinh, global::System.String lieu, global::System.String ville, global::System.Decimal nb_equipe, global::System.DateTime date_fin_incrip)
        {
            hackathon hackathon = new hackathon();
            hackathon.idhackathon = idhackathon;
            hackathon.dateheuredebuth = dateheuredebuth;
            hackathon.dateheurefinh = dateheurefinh;
            hackathon.lieu = lieu;
            hackathon.ville = ville;
            hackathon.nb_equipe = nb_equipe;
            hackathon.date_fin_incrip = date_fin_incrip;
            return hackathon;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idhackathon
        {
            get
            {
                return _idhackathon;
            }
            set
            {
                if (_idhackathon != value)
                {
                    OnidhackathonChanging(value);
                    ReportPropertyChanging("idhackathon");
                    _idhackathon = StructuralObject.SetValidValue(value, "idhackathon");
                    ReportPropertyChanged("idhackathon");
                    OnidhackathonChanged();
                }
            }
        }
        private global::System.Int32 _idhackathon;
        partial void OnidhackathonChanging(global::System.Int32 value);
        partial void OnidhackathonChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateheuredebuth
        {
            get
            {
                return _dateheuredebuth;
            }
            set
            {
                OndateheuredebuthChanging(value);
                ReportPropertyChanging("dateheuredebuth");
                _dateheuredebuth = StructuralObject.SetValidValue(value, "dateheuredebuth");
                ReportPropertyChanged("dateheuredebuth");
                OndateheuredebuthChanged();
            }
        }
        private global::System.DateTime _dateheuredebuth;
        partial void OndateheuredebuthChanging(global::System.DateTime value);
        partial void OndateheuredebuthChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateheurefinh
        {
            get
            {
                return _dateheurefinh;
            }
            set
            {
                OndateheurefinhChanging(value);
                ReportPropertyChanging("dateheurefinh");
                _dateheurefinh = StructuralObject.SetValidValue(value, "dateheurefinh");
                ReportPropertyChanged("dateheurefinh");
                OndateheurefinhChanged();
            }
        }
        private global::System.DateTime _dateheurefinh;
        partial void OndateheurefinhChanging(global::System.DateTime value);
        partial void OndateheurefinhChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String lieu
        {
            get
            {
                return _lieu;
            }
            set
            {
                OnlieuChanging(value);
                ReportPropertyChanging("lieu");
                _lieu = StructuralObject.SetValidValue(value, false, "lieu");
                ReportPropertyChanged("lieu");
                OnlieuChanged();
            }
        }
        private global::System.String _lieu;
        partial void OnlieuChanging(global::System.String value);
        partial void OnlieuChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ville
        {
            get
            {
                return _ville;
            }
            set
            {
                OnvilleChanging(value);
                ReportPropertyChanging("ville");
                _ville = StructuralObject.SetValidValue(value, false, "ville");
                ReportPropertyChanged("ville");
                OnvilleChanged();
            }
        }
        private global::System.String _ville;
        partial void OnvilleChanging(global::System.String value);
        partial void OnvilleChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String conditions
        {
            get
            {
                return _conditions;
            }
            set
            {
                OnconditionsChanging(value);
                ReportPropertyChanging("conditions");
                _conditions = StructuralObject.SetValidValue(value, true, "conditions");
                ReportPropertyChanged("conditions");
                OnconditionsChanged();
            }
        }
        private global::System.String _conditions;
        partial void OnconditionsChanging(global::System.String value);
        partial void OnconditionsChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String thematique
        {
            get
            {
                return _thematique;
            }
            set
            {
                OnthematiqueChanging(value);
                ReportPropertyChanging("thematique");
                _thematique = StructuralObject.SetValidValue(value, true, "thematique");
                ReportPropertyChanged("thematique");
                OnthematiqueChanged();
            }
        }
        private global::System.String _thematique;
        partial void OnthematiqueChanging(global::System.String value);
        partial void OnthematiqueChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String affiche
        {
            get
            {
                return _affiche;
            }
            set
            {
                OnafficheChanging(value);
                ReportPropertyChanging("affiche");
                _affiche = StructuralObject.SetValidValue(value, true, "affiche");
                ReportPropertyChanged("affiche");
                OnafficheChanged();
            }
        }
        private global::System.String _affiche;
        partial void OnafficheChanging(global::System.String value);
        partial void OnafficheChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String objectifs
        {
            get
            {
                return _objectifs;
            }
            set
            {
                OnobjectifsChanging(value);
                ReportPropertyChanging("objectifs");
                _objectifs = StructuralObject.SetValidValue(value, true, "objectifs");
                ReportPropertyChanged("objectifs");
                OnobjectifsChanged();
            }
        }
        private global::System.String _objectifs;
        partial void OnobjectifsChanging(global::System.String value);
        partial void OnobjectifsChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> idorganisateur
        {
            get
            {
                return _idorganisateur;
            }
            set
            {
                OnidorganisateurChanging(value);
                ReportPropertyChanging("idorganisateur");
                _idorganisateur = StructuralObject.SetValidValue(value, "idorganisateur");
                ReportPropertyChanged("idorganisateur");
                OnidorganisateurChanged();
            }
        }
        private Nullable<global::System.Int32> _idorganisateur;
        partial void OnidorganisateurChanging(Nullable<global::System.Int32> value);
        partial void OnidorganisateurChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal nb_equipe
        {
            get
            {
                return _nb_equipe;
            }
            set
            {
                Onnb_equipeChanging(value);
                ReportPropertyChanging("nb_equipe");
                _nb_equipe = StructuralObject.SetValidValue(value, "nb_equipe");
                ReportPropertyChanged("nb_equipe");
                Onnb_equipeChanged();
            }
        }
        private global::System.Decimal _nb_equipe;
        partial void Onnb_equipeChanging(global::System.Decimal value);
        partial void Onnb_equipeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_fin_incrip
        {
            get
            {
                return _date_fin_incrip;
            }
            set
            {
                Ondate_fin_incripChanging(value);
                ReportPropertyChanging("date_fin_incrip");
                _date_fin_incrip = StructuralObject.SetValidValue(value, "date_fin_incrip");
                ReportPropertyChanged("date_fin_incrip");
                Ondate_fin_incripChanged();
            }
        }
        private global::System.DateTime _date_fin_incrip;
        partial void Ondate_fin_incripChanging(global::System.DateTime value);
        partial void Ondate_fin_incripChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fantocheModel", "hackathon_ibfk_1", "organisateur")]
        public organisateur organisateur
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organisateur>("fantocheModel.hackathon_ibfk_1", "organisateur").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organisateur>("fantocheModel.hackathon_ibfk_1", "organisateur").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<organisateur> organisateurReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organisateur>("fantocheModel.hackathon_ibfk_1", "organisateur");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<organisateur>("fantocheModel.hackathon_ibfk_1", "organisateur", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fantocheModel", "inscrire_ibfk_1", "inscrire")]
        public EntityCollection<inscrire> inscrire
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<inscrire>("fantocheModel.inscrire_ibfk_1", "inscrire");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<inscrire>("fantocheModel.inscrire_ibfk_1", "inscrire", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fantocheModel", Name="inscrire")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class inscrire : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet inscrire.
        /// </summary>
        /// <param name="idhackathon">Valeur initiale de la propriété idhackathon.</param>
        /// <param name="idequipe">Valeur initiale de la propriété idequipe.</param>
        /// <param name="dateinscription">Valeur initiale de la propriété dateinscription.</param>
        public static inscrire Createinscrire(global::System.Int32 idhackathon, global::System.Int32 idequipe, global::System.DateTime dateinscription)
        {
            inscrire inscrire = new inscrire();
            inscrire.idhackathon = idhackathon;
            inscrire.idequipe = idequipe;
            inscrire.dateinscription = dateinscription;
            return inscrire;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idhackathon
        {
            get
            {
                return _idhackathon;
            }
            set
            {
                if (_idhackathon != value)
                {
                    OnidhackathonChanging(value);
                    ReportPropertyChanging("idhackathon");
                    _idhackathon = StructuralObject.SetValidValue(value, "idhackathon");
                    ReportPropertyChanged("idhackathon");
                    OnidhackathonChanged();
                }
            }
        }
        private global::System.Int32 _idhackathon;
        partial void OnidhackathonChanging(global::System.Int32 value);
        partial void OnidhackathonChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idequipe
        {
            get
            {
                return _idequipe;
            }
            set
            {
                if (_idequipe != value)
                {
                    OnidequipeChanging(value);
                    ReportPropertyChanging("idequipe");
                    _idequipe = StructuralObject.SetValidValue(value, "idequipe");
                    ReportPropertyChanged("idequipe");
                    OnidequipeChanged();
                }
            }
        }
        private global::System.Int32 _idequipe;
        partial void OnidequipeChanging(global::System.Int32 value);
        partial void OnidequipeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateinscription
        {
            get
            {
                return _dateinscription;
            }
            set
            {
                OndateinscriptionChanging(value);
                ReportPropertyChanging("dateinscription");
                _dateinscription = StructuralObject.SetValidValue(value, "dateinscription");
                ReportPropertyChanged("dateinscription");
                OndateinscriptionChanged();
            }
        }
        private global::System.DateTime _dateinscription;
        partial void OndateinscriptionChanging(global::System.DateTime value);
        partial void OndateinscriptionChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fantocheModel", "inscrire_ibfk_2", "equipe")]
        public equipe equipe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<equipe>("fantocheModel.inscrire_ibfk_2", "equipe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<equipe>("fantocheModel.inscrire_ibfk_2", "equipe").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<equipe> equipeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<equipe>("fantocheModel.inscrire_ibfk_2", "equipe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<equipe>("fantocheModel.inscrire_ibfk_2", "equipe", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fantocheModel", "inscrire_ibfk_1", "hackathon")]
        public hackathon hackathon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<hackathon>("fantocheModel.inscrire_ibfk_1", "hackathon").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<hackathon>("fantocheModel.inscrire_ibfk_1", "hackathon").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<hackathon> hackathonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<hackathon>("fantocheModel.inscrire_ibfk_1", "hackathon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<hackathon>("fantocheModel.inscrire_ibfk_1", "hackathon", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fantocheModel", Name="membre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class membre : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet membre.
        /// </summary>
        /// <param name="idmembre">Valeur initiale de la propriété idmembre.</param>
        /// <param name="nom">Valeur initiale de la propriété nom.</param>
        /// <param name="prenom">Valeur initiale de la propriété prenom.</param>
        /// <param name="email">Valeur initiale de la propriété email.</param>
        public static membre Createmembre(global::System.Int32 idmembre, global::System.String nom, global::System.String prenom, global::System.String email)
        {
            membre membre = new membre();
            membre.idmembre = idmembre;
            membre.nom = nom;
            membre.prenom = prenom;
            membre.email = email;
            return membre;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idmembre
        {
            get
            {
                return _idmembre;
            }
            set
            {
                if (_idmembre != value)
                {
                    OnidmembreChanging(value);
                    ReportPropertyChanging("idmembre");
                    _idmembre = StructuralObject.SetValidValue(value, "idmembre");
                    ReportPropertyChanged("idmembre");
                    OnidmembreChanged();
                }
            }
        }
        private global::System.Int32 _idmembre;
        partial void OnidmembreChanging(global::System.Int32 value);
        partial void OnidmembreChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> idequipe
        {
            get
            {
                return _idequipe;
            }
            set
            {
                OnidequipeChanging(value);
                ReportPropertyChanging("idequipe");
                _idequipe = StructuralObject.SetValidValue(value, "idequipe");
                ReportPropertyChanged("idequipe");
                OnidequipeChanged();
            }
        }
        private Nullable<global::System.Int32> _idequipe;
        partial void OnidequipeChanging(Nullable<global::System.Int32> value);
        partial void OnidequipeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nom
        {
            get
            {
                return _nom;
            }
            set
            {
                OnnomChanging(value);
                ReportPropertyChanging("nom");
                _nom = StructuralObject.SetValidValue(value, false, "nom");
                ReportPropertyChanged("nom");
                OnnomChanged();
            }
        }
        private global::System.String _nom;
        partial void OnnomChanging(global::System.String value);
        partial void OnnomChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String prenom
        {
            get
            {
                return _prenom;
            }
            set
            {
                OnprenomChanging(value);
                ReportPropertyChanging("prenom");
                _prenom = StructuralObject.SetValidValue(value, false, "prenom");
                ReportPropertyChanged("prenom");
                OnprenomChanged();
            }
        }
        private global::System.String _prenom;
        partial void OnprenomChanging(global::System.String value);
        partial void OnprenomChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false, "email");
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String telephone
        {
            get
            {
                return _telephone;
            }
            set
            {
                OntelephoneChanging(value);
                ReportPropertyChanging("telephone");
                _telephone = StructuralObject.SetValidValue(value, true, "telephone");
                ReportPropertyChanged("telephone");
                OntelephoneChanged();
            }
        }
        private global::System.String _telephone;
        partial void OntelephoneChanging(global::System.String value);
        partial void OntelephoneChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> datenaissance
        {
            get
            {
                return _datenaissance;
            }
            set
            {
                OndatenaissanceChanging(value);
                ReportPropertyChanging("datenaissance");
                _datenaissance = StructuralObject.SetValidValue(value, "datenaissance");
                ReportPropertyChanged("datenaissance");
                OndatenaissanceChanged();
            }
        }
        private Nullable<global::System.DateTime> _datenaissance;
        partial void OndatenaissanceChanging(Nullable<global::System.DateTime> value);
        partial void OndatenaissanceChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lienportfolio
        {
            get
            {
                return _lienportfolio;
            }
            set
            {
                OnlienportfolioChanging(value);
                ReportPropertyChanging("lienportfolio");
                _lienportfolio = StructuralObject.SetValidValue(value, true, "lienportfolio");
                ReportPropertyChanged("lienportfolio");
                OnlienportfolioChanged();
            }
        }
        private global::System.String _lienportfolio;
        partial void OnlienportfolioChanging(global::System.String value);
        partial void OnlienportfolioChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fantocheModel", "membre_ibfk_2", "equipe")]
        public equipe equipe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<equipe>("fantocheModel.membre_ibfk_2", "equipe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<equipe>("fantocheModel.membre_ibfk_2", "equipe").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<equipe> equipeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<equipe>("fantocheModel.membre_ibfk_2", "equipe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<equipe>("fantocheModel.membre_ibfk_2", "equipe", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fantocheModel", Name="organisateur")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class organisateur : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet organisateur.
        /// </summary>
        /// <param name="idorganisateur">Valeur initiale de la propriété idorganisateur.</param>
        /// <param name="nom">Valeur initiale de la propriété nom.</param>
        /// <param name="prenom">Valeur initiale de la propriété prenom.</param>
        /// <param name="email">Valeur initiale de la propriété email.</param>
        public static organisateur Createorganisateur(global::System.Int32 idorganisateur, global::System.String nom, global::System.String prenom, global::System.String email)
        {
            organisateur organisateur = new organisateur();
            organisateur.idorganisateur = idorganisateur;
            organisateur.nom = nom;
            organisateur.prenom = prenom;
            organisateur.email = email;
            return organisateur;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idorganisateur
        {
            get
            {
                return _idorganisateur;
            }
            set
            {
                if (_idorganisateur != value)
                {
                    OnidorganisateurChanging(value);
                    ReportPropertyChanging("idorganisateur");
                    _idorganisateur = StructuralObject.SetValidValue(value, "idorganisateur");
                    ReportPropertyChanged("idorganisateur");
                    OnidorganisateurChanged();
                }
            }
        }
        private global::System.Int32 _idorganisateur;
        partial void OnidorganisateurChanging(global::System.Int32 value);
        partial void OnidorganisateurChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nom
        {
            get
            {
                return _nom;
            }
            set
            {
                OnnomChanging(value);
                ReportPropertyChanging("nom");
                _nom = StructuralObject.SetValidValue(value, false, "nom");
                ReportPropertyChanged("nom");
                OnnomChanged();
            }
        }
        private global::System.String _nom;
        partial void OnnomChanging(global::System.String value);
        partial void OnnomChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String prenom
        {
            get
            {
                return _prenom;
            }
            set
            {
                OnprenomChanging(value);
                ReportPropertyChanging("prenom");
                _prenom = StructuralObject.SetValidValue(value, false, "prenom");
                ReportPropertyChanged("prenom");
                OnprenomChanged();
            }
        }
        private global::System.String _prenom;
        partial void OnprenomChanging(global::System.String value);
        partial void OnprenomChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false, "email");
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fantocheModel", "hackathon_ibfk_1", "hackathon")]
        public EntityCollection<hackathon> hackathon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<hackathon>("fantocheModel.hackathon_ibfk_1", "hackathon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<hackathon>("fantocheModel.hackathon_ibfk_1", "hackathon", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fantocheModel", Name="token")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class token : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet token.
        /// </summary>
        /// <param name="uuid">Valeur initiale de la propriété uuid.</param>
        /// <param name="idequipe">Valeur initiale de la propriété idequipe.</param>
        public static token Createtoken(global::System.String uuid, global::System.Int32 idequipe)
        {
            token token = new token();
            token.uuid = uuid;
            token.idequipe = idequipe;
            return token;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String uuid
        {
            get
            {
                return _uuid;
            }
            set
            {
                if (_uuid != value)
                {
                    OnuuidChanging(value);
                    ReportPropertyChanging("uuid");
                    _uuid = StructuralObject.SetValidValue(value, false, "uuid");
                    ReportPropertyChanged("uuid");
                    OnuuidChanged();
                }
            }
        }
        private global::System.String _uuid;
        partial void OnuuidChanging(global::System.String value);
        partial void OnuuidChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idequipe
        {
            get
            {
                return _idequipe;
            }
            set
            {
                OnidequipeChanging(value);
                ReportPropertyChanging("idequipe");
                _idequipe = StructuralObject.SetValidValue(value, "idequipe");
                ReportPropertyChanged("idequipe");
                OnidequipeChanged();
            }
        }
        private global::System.Int32 _idequipe;
        partial void OnidequipeChanging(global::System.Int32 value);
        partial void OnidequipeChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fantocheModel", "token_ibfk_1", "equipe")]
        public equipe equipe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<equipe>("fantocheModel.token_ibfk_1", "equipe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<equipe>("fantocheModel.token_ibfk_1", "equipe").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<equipe> equipeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<equipe>("fantocheModel.token_ibfk_1", "equipe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<equipe>("fantocheModel.token_ibfk_1", "equipe", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
